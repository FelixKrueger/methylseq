nextflow_workflow {

    name "Test Workflow PREPARE_GENOME"
    script "../main.nf"
    workflow "PREPARE_GENOME"
    config "../nextflow.config"

    test("BISMARK - Generate Index") {

        when {
            params {
                aligner          = "bismark"
                publish_dir_mode = copy
                save_reference   = false
                slamseq          = false
            }
            workflow {
                """
                input[0] = file(params.pipelines_testdata_base_path + 'reference/genome.fa', checkIfExists: true) // fasta
                input[1] = [] // fasta_index
                input[2] = [] // bismark_index
                input[3] = [] // bwameth_index
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    workflow.out.fasta,
                    workflow.out.bismark_index,
                    workflow.out.versions
                    ).match() }
            )
        }

    }

    test("BWAMETH - Generate Index") {

        when {
            params {
                aligner          = "bwameth"
                publish_dir_mode = copy
                save_reference   = false
                slamseq          = false
            }
            workflow {
                """
                input[0] = file(params.pipelines_testdata_base_path + 'reference/genome.fa', checkIfExists: true) // fasta
                input[1] = [] // fasta_index
                input[2] = [] // bismark_index
                input[3] = [] // bwameth_index
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    workflow.out.fasta,
                    workflow.out.fasta_index,
                    workflow.out.bwameth_index,
                    workflow.out.versions
                    ).match() }
            )
        }

    }

}
